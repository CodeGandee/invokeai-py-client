name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag (vX.Y.Z) to publish (optional)'
        required: false

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Resolve tag & version
        id: meta
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ inputs.tag }}" ]; then
            TAG="${{ inputs.tag }}"
          else
            TAG="$GITHUB_REF_NAME"
          fi
          TAG=${TAG#v}
          VERSION=$(python -c "import tomllib, pathlib;print(tomllib.loads(pathlib.Path('pyproject.toml').read_text())['project']['version'])")
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Tag: $TAG  Pyproject: $VERSION"
          test "$TAG" = "$VERSION" || { echo 'Version mismatch'; exit 1; }
      - name: Build
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
          python -m twine check dist/*
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
      - name: Summary
        run: echo "Published invokeai-py-client ${{ steps.meta.outputs.tag }}"
